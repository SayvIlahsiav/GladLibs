#BlueJ class context
comment0.target=GladLibs
comment0.text=\r\n\ The\ GladLibs\ class\ dynamically\ generates\ stories\ \r\n\ by\ substituting\ placeholders\ within\ a\ template\ \r\n\ with\ random\ words\ from\ specified\ categories,\ \r\n\ offering\ a\ customizable\ and\ entertaining\ way\ \r\n\ to\ create\ text-based\ content.\r\n\ \r\n\ @author\ Vaishali\ Vyas\r\n\ @version\ 2024-02-12\r\n
comment1.params=
comment1.target=GladLibs()
comment1.text=\r\n\ Constructs\ a\ GladLibs\ instance\ using\ the\ default\ data\ source\ directory.\r\n
comment10.params=
comment10.target=int\ totalWordsInMap()
comment10.text=\r\n\ This\ method\ returns\ the\ total\ number\ of\ words\ in\ all\ the\ Lists\ in\ the\ Map.\r\n
comment11.params=
comment11.target=int\ totalWordsConsidered()
comment11.text=\r\n\ This\ method\ returns\ the\ total\ number\ of\ words\ in\ the\ ArrayLists\ of\ the\ categories\ that\ were\ used\ for\ a\ particular\ GladLib.\r\n
comment12.params=
comment12.target=void\ makeStory()
comment12.text=\r\n\ Generates\ and\ prints\ a\ story\ to\ the\ console\ using\ the\ default\ template.\r\n
comment2.params=source
comment2.target=GladLibs(java.lang.String)
comment2.text=\r\n\ Constructs\ a\ GladLibs\ instance\ using\ a\ specified\ source\ directory\ or\ URL.\r\n\r\n\ @param\ source\ the\ path\ to\ the\ source\ directory\ or\ URL\ containing\ the\ word\ lists\r\n
comment3.params=source
comment3.target=void\ initializeFromSource(java.lang.String)
comment3.text=\r\n\ Initializes\ word\ categories\ and\ their\ corresponding\ words\ from\ the\ specified\ source.\r\n\r\n\ @param\ source\ the\ path\ to\ the\ source\ directory\ or\ URL\ containing\ the\ word\ lists\r\n
comment4.params=source
comment4.target=java.util.ArrayList\ readIt(java.lang.String)
comment5.params=source
comment5.target=java.lang.String\ randomFrom(java.util.ArrayList)
comment5.text=\r\n\ Returns\ a\ random\ word\ from\ the\ specified\ ArrayList\ of\ words.\r\n\r\n\ @param\ source\ the\ ArrayList\ of\ words\ to\ select\ from\r\n\ @return\ a\ randomly\ selected\ word\ from\ the\ list\r\n
comment6.params=label
comment6.target=java.lang.String\ getSubstitute(java.lang.String)
comment6.text=\r\n\ Retrieves\ a\ substitute\ word\ for\ a\ given\ label.\ If\ the\ label\ is\ "number",\ generates\ a\ random\ number\ instead.\r\n\r\n\ @param\ label\ the\ label\ for\ which\ to\ find\ a\ substitute\ word\r\n\ @return\ a\ substitute\ word\ or\ a\ random\ number\ as\ a\ string\r\n
comment7.params=w
comment7.target=java.lang.String\ processWord(java.lang.String)
comment7.text=\r\n\ Processes\ a\ word\ by\ replacing\ any\ placeholders\ within\ it\ with\ a\ substitute\ word.\r\n\r\n\ @param\ w\ the\ word\ to\ process\r\n\ @return\ the\ processed\ word\ with\ placeholders\ replaced\ by\ substitute\ words\r\n
comment8.params=source
comment8.target=java.lang.String\ fromTemplate(java.lang.String)
comment8.text=\r\n\ Generates\ a\ story\ from\ a\ template,\ replacing\ placeholders\ with\ words\ from\ the\ corresponding\ categories.\r\n\r\n\ @param\ source\ the\ path\ or\ URL\ to\ the\ template\r\n\ @return\ a\ story\ generated\ from\ the\ template\r\n
comment9.params=s\ lineWidth
comment9.target=void\ printOut(java.lang.String,\ int)
comment9.text=\r\n\ Prints\ the\ generated\ story\ to\ the\ console,\ with\ a\ specified\ maximum\ line\ width.\r\n\r\n\ @param\ s\ the\ story\ to\ print\r\n\ @param\ lineWidth\ the\ maximum\ width\ of\ a\ line\ before\ wrapping\ to\ the\ next\ line\r\n
numComments=13
